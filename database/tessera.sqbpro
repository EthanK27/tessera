<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/ethan.kemprowski/Documents/tessera/database/tessera.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2237"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainTickets"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Events" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="5" mode="1"/></sort><column_widths><column index="1" value="53"/><column index="2" value="163"/><column index="3" value="136"/><column index="4" value="72"/><column index="5" value="40"/><column index="6" value="99"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Prices" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="60"/><column index="2" value="53"/><column index="3" value="36"/><column index="4" value="50"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Tickets" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="54"/><column index="2" value="53"/><column index="3" value="47"/><column index="4" value="85"/><column index="5" value="44"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Users" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="3" mode="1"/></sort><column_widths><column index="1" value="47"/><column index="2" value="59"/><column index="3" value="280"/><column index="4" value="352"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="demo" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="107"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">/*
CREATE TABLE IF NOT EXISTS Events (
    event_id INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT,
    date DATE,
    time TIME,
    location TEXT,
	url TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS Users (
    user_id INTEGER PRIMARY KEY,
    username TEXT NOT NULL UNIQUE,
    password_hash TEXT NOT NULL,
    email TEXT NOT NULL UNIQUE
);
*/
--INSERT INTO Events (name, description, date, time, location) VALUES ('SQLite4 Announcement Party', 'Because 3 versions is not enough.', '2025-04-20', '10:00', 'SQL Arena');
--SELECT * FROM Events;

/*
INSERT INTO Events (name, description, date, time, location) VALUES ('event1', 'talha party', '2024-06-20', '11:00', 'Talhas House');
INSERT INTO Events (name, description, date, time, location) VALUES ('event2', 'talha celebration', '2024-08-25', '13:00', 'Tree House');
INSERT INTO Events (name, description, date, time, location) VALUES ('event3', 'talha academy', '2024-08-25', '13:00', 'Alaska');

INSERT INTO Users (username, password_hash, email) VALUES ('Talha', 'abc',  'talha@talha.com');
INSERT INTO Users (username, password_hash, email) VALUES ('Talha1', 'abc',  'talha1@talha.com');
INSERT INTO Users (username, password_hash, email) VALUES ('Talha 2', 'abcd',  'talha2@talha.com');

INSERT INTO TICKETS (event_id, user_id, purchase_date, price) VALUES (1, 1, '2024-08-2023', '50.50');
INSERT INTO TICKETS (event_id, user_id, purchase_date, price) VALUES (2, 1, '2024-08-2022', '100.00');
INSERT INTO TICKETS (event_id, user_id, purchase_date, price) VALUES (2, 3, '2024-08-2023', '25');
INSERT INTO TICKETS (event_id, user_id, purchase_date, price) VALUES (2, 1, '2024-08-2022', '70.00');
INSERT INTO TICKETS (event_id, user_id, purchase_date, price) VALUES (3, 1, '2024-08-2022', '1000.00');


SELECT * from Events;
SELECT * from Users;
SELECT * from TICKETS;
*/
--INSERT INTO TICKETS (event_id, user_id, purchase_date, price) VALUES (3, 2, '2024-08-2022', '1060.00');
--INSERT INTO Tickets (event_id, user_id, purchase_date, price, ) VALUES (123, 321, '2024-03-22', 15.50);
/* Homework 1: Write a Query that returns all the tickets for a specifc user*/
--SELECT * from Tickets WHERE user_id = '1' AND event_id = '2';

/*Homework 2: Write a Query that returns events between certain dates*/
--SELECT * from EVENTS where date &gt; '2024-07-15' AND date &lt; '2024-09-20';

/* Homework 3: Write a Query that returns users who have spent more than $100.00 on tickets */

--SELECT DISTINCT Users.username from Users JOIN TICKETS where price &gt;= 100;

/* Homework 4: Get a leaderboard! In your test data, who has the most tickets? */
--SELECT Users.username AS 'name', COUNT(Tickets.user_id) AS 'tickets sold' from USERS INNER JOIN TICKETS ON Users.user_id=Tickets.user_id GROUP BY Users.username;
--SELECT Users.username, COUNT(Tickets.user_id) from USERS INNER JOIN TICKETS ON Users.user_id=Tickets.user_id;

/* Homework 5: Advanced: Write a single query that pulls every unique username in the database, 
	and lists an aggregated value representing the total amount of money the user has spent on tickets */
--SELECT DISTINCT Users.username, SUM(price) AS 'aggregated value' from USERS JOIN TICKETS ON Users.user_id=Tickets.user_id GROUP BY Users.username;
-- Lab 2
--INSERT INTO EVENTS (name, description, date, time, location) VALUES ('Noah Kahan Concert', 'stick season forever tour', '2024-07-20', '16:00', 'Ontario');
--INSERT INTO EVENTS (name, description, date, time, location) VALUES ('Washington Capitals Game', 'Capitals vs Penguins', '2024-06-25', '15:00', 'Capital One Arena');
--INSERT INTO EVENTS (name, description, date, time, location) VALUES ('The Great Gatsby Broadway', 'The Great Gatsby musical', '2024-08-12', '20:00', 'New York City');
--SELECT password_hash FROM Users WHERE username = 'BananaPudding';
--UPDATE Events SET url = &quot;https://bdc2020.o0bc.com/wp-content/uploads/2023/11/Music_Noah_Kahan_21576-6553bf7cf11ce.jpg&quot; WHERE name = &quot;Noah Kahan Concert&quot;;
--UPDATE Events SET url = &quot;https://m.media-amazon.com/images/I/81w2sG-MgDL._UF1000,1000_QL80_.jpg&quot; WHERE name = &quot;The Great Gatsby Broadway&quot;;
--UPDATE Events SET url = &quot;https://natashaskitchen.com/wp-content/uploads/2022/08/Banana-Pudding-SQ.jpg&quot; WHERE name = &quot;Banana Pudding Eating Contest&quot;;
--SELECT row_name, seat_number, status, value FROM Tickets JOIN Prices ON Tickets.pricecode = Prices.pricecode AND Tickets.event_id = Prices.event_id WHERE Tickets.event_id=1




</sql><current_tab id="0"/></tab_sql></sqlb_project>
